Author: Johan Almbladh <johan@anyfi.net>
Date:   Thu May 16 10:51:48 2013 +0200

    mac80211: perform power save processing even if no encryption key is set
    
    Thanks to the low-level interface and monitor mode packet injection it is
    relatively straightforward to implement "thin" access points with mac80211
    There is however one tiny obstacle; encrypted frames do not go through the
    power save processing when the encryption keys are not available. This means
    either the encryption keys must be transfered from the 802.1X authenticator
    (which in a split-mac architecture is usually somewhere else in the network)
    to the access point, or the stack must be modified to perform power save
    processing on encrypted frames in this case. This patch takes the latter
    approach, enabling power save processing for encrypted frames by slightly
    reordering the RX handlers.

    Signed-off-by: Johan Almbladh <johan@anyfi.net>

diff -urN --show-c-function compat-wireless-2012-09-07-before_reorder_rxhs/net/mac80211/rx.c compat-wireless-2012-09-07-after_reorder_rxhs/net/mac80211/rx.c
--- compat-wireless-2012-09-07-before_reorder_rxhs/net/mac80211/rx.c	2013-05-20 17:08:40.893220498 +0200
+++ compat-wireless-2012-09-07-after_reorder_rxhs/net/mac80211/rx.c	2013-05-20 17:09:28.649222063 +0200
@@ -2685,10 +2685,10 @@ static void ieee80211_rx_handlers(struct
 		 */
 		rx->skb = skb;
 
-		CALL_RXH(ieee80211_rx_h_decrypt)
 		CALL_RXH(ieee80211_rx_h_check_more_data)
 		CALL_RXH(ieee80211_rx_h_uapsd_and_pspoll)
 		CALL_RXH(ieee80211_rx_h_sta_process)
+		CALL_RXH(ieee80211_rx_h_decrypt)
 		CALL_RXH(ieee80211_rx_h_defragment)
 		CALL_RXH(ieee80211_rx_h_michael_mic_verify)
 		/* must be after MMIC verify so header is counted in MPDU mic */
